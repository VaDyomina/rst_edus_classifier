1	https://habr.com/ru/company/kaspersky/blog/460135/	_	_	_	_	0	ROOT	_	_
2	Security Week 29: уязвимость в сервисе Zoom, безопасность и драма	_	_	_	_	0	ROOT	_	_
3	На прошлой неделе исследователь Джонатан Лейтсач опубликовал весьма эмоциональный пост	_	_	_	_	4	attribution_r	_	_
4	об уязвимостях в клиенте для веб-конференций Zoom для операционной системы macOS.	_	_	_	_	6	background_r	_	_
5	В данном случае не совсем понятно, была ли уязвимость непреднамеренным багом или заранее спланированной фичей.	_	_	_	_	4	evaluation_r	_	_
6	Попробуем разобраться,	_	_	_	_	0	ROOT	_	_
7	но	_	_	_	_	6	contrast_m	_	_
8	если коротко,	_	_	_	_	9	condition_r	_	_
9	выходит так:	_	_	_	_	7	same-unit_m	_	_
10	если у вас установлен клиент Zoom,	_	_	_	_	11	condition_r	_	_
11	злоумышленник может подключить вас к своей телеконференции без спроса,	_	_	_	_	7	elaboration_r	_	_
12	более того — он может активировать веб-камеру,	_	_	_	_	11	joint_m	_	_
13	не спрашивая дополнительных разрешений.	_	_	_	_	12	condition_r	_	_
14	Тот момент, когда вместо поиска пропатченной версии кто-то решит просто удалить клиент из системы.	_	_	_	_	18	cause_r	_	_
15	Но в данном случае это не поможет:	_	_	_	_	14	contrast_m	_	_
16	вместе с клиентом устанавливается веб-сервер, который работает даже после деинсталляции	_	_	_	_	15	elaboration_r	_	_
17	— он даже способен «вернуть» клиентское ПО на место.	_	_	_	_	16	joint_m	_	_
18	В опасности, таким образом, оказались даже те, кто когда-то пользовался сервисами Zoom,	_	_	_	_	20	solutionhood_r	_	_
19	но потом перестал.	_	_	_	_	18	contrast_m	_	_
20	К ним на помощь пришла компания Apple,	_	_	_	_	0	ROOT	_	_
21	без особых фанфар удалившая веб-сервер апдейтом для ОС.	_	_	_	_	20	elaboration_r	_	_
22	Эта история — настоящая infosec-драма,	_	_	_	_	20	elaboration_r	_	_
23	в которой пользователям остается только наблюдать, как на их компьютерах появляется	_	_	_	_	22	elaboration_r	_	_
24	и исчезает разнообразный софт.	_	_	_	_	23	joint_m	_	_
25	IMG	_	_	_	_	20	elaboration_r	_	_
26	Исследование методов работы клиента Zoom началось с изучения локального веб-сервера:	_	_	_	_	0	ROOT	_	_
27	к нему пытается обратиться сайт сервиса	_	_	_	_	26	elaboration_r	_	_
28	при открытии ссылки	_	_	_	_	27	condition_r	_	_
29	для подключения к телеконференции.	_	_	_	_	27	purpose_r	_	_
30	Применен относительно элегантный способ запроса состояния локального сервера	_	_	_	_	26	joint_m	_	_
31	— путем передачи изображения определенного формата.	_	_	_	_	30	cause_r	_	_
32	IMG	_	_	_	_	30	elaboration_r	_	_
33	Так сделано	_	_	_	_	26	elaboration_r	_	_
34	для обхода ограничений браузера, следующего правилам Cross-Origin Resource Sharing.	_	_	_	_	33	purpose_r	_	_
35	Веб-серверу Zoom также можно передать запрос на подключение к конференции.	_	_	_	_	0	ROOT	_	_
36	Выглядит этот запрос примерно так:	_	_	_	_	35	elaboration_r	_	_
37	IMG	_	_	_	_	36	elaboration_r	_	_
38	Можно создать конференцию,	_	_	_	_	35	elaboration_r	_	_
39	поместить подобный запрос на веб-страницу,	_	_	_	_	38	sequence_m	_	_
40	отправить ссылку жертве,	_	_	_	_	38	sequence_m	_	_
41	и установленный на компьютере клиент автоматически подключит пользователя.	_	_	_	_	38	sequence_m	_	_
42	Дальше стоит посмотреть на параметры самой веб-конференции:	_	_	_	_	38	sequence_m	_	_
43	IMG	_	_	_	_	42	elaboration_r	_	_
44	У вас есть возможность принудительного включения веб-камеры пользователя.	_	_	_	_	0	ROOT	_	_
45	То есть вы можете заманить ничего не подозревающего человека на конференц-звонок	_	_	_	_	44	restatement_m	_	_
46	и сразу же получить изображение с камеры	_	_	_	_	45	sequence_m	_	_
47	(но звук с микрофона жертве нужно будет включить вручную).	_	_	_	_	46	contrast_m	_	_
48	В клиенте Zoom автоматическое включение камеры можно заблокировать,	_	_	_	_	44	elaboration_r	_	_
49	но с настройками по умолчанию камера включается сразу же.	_	_	_	_	48	contrast_m	_	_
50	Кстати, если отправлять запросы на подключение к конференции непрерывно,	_	_	_	_	51	condition_r	_	_
51	приложение Zoom будет постоянно переключать фокус на себя,	_	_	_	_	44	background_r	_	_
52	не давая пользователю возможности как-то отменить это действие.	_	_	_	_	51	condition_r	_	_
53	Это классическая атака Denial Of Service.	_	_	_	_	51	elaboration_r	_	_
54	IMG	_	_	_	_	44	elaboration_r	_	_
55	Наконец, исследователь подтвердил	_	_	_	_	56	attribution_r	_	_
56	возможность принудительного апгрейда или установки заново клиента Zoom,	_	_	_	_	0	ROOT	_	_
57	если на компьютере работает веб-сервер.	_	_	_	_	56	condition_r	_	_
58	Реакция вендора поначалу была далека от идеальной.	_	_	_	_	56	evaluation_r	_	_
59	Разработчики Zoom предложили несколько вариантов «заплаток» в логике веб-сервера,	_	_	_	_	58	elaboration_r	_	_
60	чтобы исключить возможность подключения пользователей без спроса.	_	_	_	_	59	purpose_r	_	_
61	Все они легко обходились	_	_	_	_	59	elaboration_r	_	_
62	или немного усложняли жизнь потенциального злоумышленника.	_	_	_	_	61	joint_m	_	_
63	Финальное решение заключалось в добавлении еще одного параметра, передаваемого локальному серверу.	_	_	_	_	59	elaboration_r	_	_
64	Как выяснил исследователь,	_	_	_	_	65	attribution_r	_	_
65	оно тоже не решало проблему.	_	_	_	_	63	evaluation_r	_	_
66	Единственное, что точно починили — это уязвимость, позволяющую проводить DoS-атаку.	_	_	_	_	65	contrast_m	_	_
67	А на предложение Джонатана	_	_	_	_	68	attribution_r	_	_
68	убрать включение веб-камеры по требованию организатора конференции и вовсе был дан ответ, что это фича,	_	_	_	_	56	contrast_m	_	_
69	«клиентам так удобнее».	_	_	_	_	68	evaluation_r	_	_
70	Первый раз исследователь пытался выйти на контакт с разработчиками Zoom 8 марта.	_	_	_	_	0	ROOT	_	_
71	8 июля истек общепринятый трехмесячный срок	_	_	_	_	70	sequence_m	_	_
72	для исправления уязвимости,	_	_	_	_	71	purpose_r	_	_
73	и Джонатан опубликовал свой пост о том,	_	_	_	_	74	attribution_r	_	_
74	что он посчитал нерешенной проблемой.	_	_	_	_	71	sequence_m	_	_
75	Только после публикации статьи Zoom пошел на более радикальные меры:	_	_	_	_	70	sequence_m	_	_
76	9 июля был выпущен патч, который полностью удаляет веб-сервер с компьютеров под управлением macOS.	_	_	_	_	75	elaboration_r	_	_
77	Дорогая редакция регулярно общается по видеоконференц-связи	_	_	_	_	78	elaboration_r	_	_
78	и может на личном опыте заявить:	_	_	_	_	0	ROOT	_	_
79	все так делают.	_	_	_	_	78	evidence_r	_	_
80	Не в том смысле, что все устанавливают локальный веб-сервер вместе с клиентом	_	_	_	_	78	contrast_m	_	_
81	и потом забывают его удалить.	_	_	_	_	80	joint_m	_	_
82	Все или почти все сервисы для конференц-связи требуют больше привилегий в системе,	_	_	_	_	84	cause_r	_	_
83	чем им может предоставить страница в браузере.	_	_	_	_	82	comparison_m	_	_
84	Поэтому в ход идут локальные приложения, расширения для браузеров и прочие инструменты,	_	_	_	_	78	elaboration_r	_	_
85	чтобы в процессе общения работали микрофон и камера,	_	_	_	_	84	purpose_r	_	_
86	можно было делиться файлами и изображением своего рабочего стола.	_	_	_	_	85	joint_m	_	_
87	Откровенно говоря, «уязвимость» (а точнее, намеренная ошибка в логике) Zoom — это не самое страшное, что с такими сервисами происходило.	_	_	_	_	78	evaluation_r	_	_
88	В 2017 году проблема была обнаружена в браузерном расширении другого сервиса конференц-связи — Cisco Webex.	_	_	_	_	89	cause_r	_	_
89	В том случае уязвимость позволяла выполнять в системе произвольный код.	_	_	_	_	0	ROOT	_	_
90	В 2016 году в менеджере паролей Trend Micro проблема также была найдена в локальном веб-сервере,	_	_	_	_	91	cause_r	_	_
91	что тоже открывало возможность выполнения произвольного кода.	_	_	_	_	89	joint_m	_	_
92	В конце прошлого года мы писали про дыру в утилите для клавиатур и мышей Logitech:	_	_	_	_	89	joint_m	_	_
93	даже там использовался локальный веб-сервер, обращения к которому были возможны откуда угодно.	_	_	_	_	92	elaboration_r	_	_
94	Вывод:	_	_	_	_	95	preparation_r	_	_
95	это довольно распространенная практика,	_	_	_	_	0	ROOT	_	_
96	хотя с точки зрения безопасности явно не самая лучшая	_	_	_	_	95	concession_r	_	_
97	— уж слишком много потенциальных дыр несет с собой такой веб-сервер.	_	_	_	_	96	cause_r	_	_
98	Особенно если он по умолчанию создан	_	_	_	_	95	elaboration_r	_	_
99	для взаимодействия с внешними ресурсами (например, сайтом, инициирующим веб-конференцию).	_	_	_	_	98	purpose_r	_	_
100	Тем более, если его нельзя удалить.	_	_	_	_	98	joint_m	_	_
101	Возможность быстрого восстановления клиента Zoom после удаления была явно сделана то ли для удобства пользователей, то ли для удобства разработчика.	_	_	_	_	100	elaboration_r	_	_
102	Тем не менее, после публикации исследования это принесло дополнительные проблемы.	_	_	_	_	101	contrast_m	_	_
103	Окей, активные пользователи Zoom получили обновление,	_	_	_	_	104	solutionhood_r	_	_
104	и проблема была решена.	_	_	_	_	102	elaboration_r	_	_
105	А что делать с теми, кто когда-то пользовался клиентом Zoom,	_	_	_	_	108	solutionhood_r	_	_
106	потом перестал,	_	_	_	_	105	sequence_m	_	_
107	но локальный веб-сервер у них до сих пор работает?	_	_	_	_	105	contrast_m	_	_
108	Как оказалось, Apple по-тихому выпустила апдейт, удаляющий веб-сервер даже в таком случае.	_	_	_	_	101	joint_m	_	_
109	Надо отдать должное разработчику сервиса Zoom:	_	_	_	_	0	ROOT	_	_
110	после, так сказать, негативной реакции общественности они решили проблему	_	_	_	_	109	elaboration_r	_	_
111	и теперь регулярно делятся обновлениями с пользователями.	_	_	_	_	110	sequence_m	_	_
112	Это явно не история успеха:	_	_	_	_	109	evaluation_r	_	_
113	тут и разработчик пытался вежливо игнорировать реальные предложения исследователя,	_	_	_	_	112	elaboration_r	_	_
114	и исследователь назвал	_	_	_	_	115	attribution_r	_	_
115	«зиродеем» то, что им не совсем является.	_	_	_	_	113	joint_m	_	_
116	Но в итоге все закончилось хорошо.	_	_	_	_	112	contrast_m	_	_
117	Disclaimer: Мнения, изложенные в этом дайджесте, могут не всегда совпадать с официальной позицией «Лаборатории Касперского».	_	_	_	_	0	ROOT	_	_
118	Дорогая редакция вообще рекомендует относиться к любым мнениям со здоровым скептицизмом.	_	_	_	_	117	joint_m	_	_

