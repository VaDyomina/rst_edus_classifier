EDU_1;EDU_2;Relation
Это такое соревнование, где команды программистов со всего мира пытаются на время как можно лучше решить некую задачу.;В этот понедельник закончился трехдневный марафон под названием ICFPC.;elaboration_r
В этот раз – обход лабиринтов с разным доп. инвентарем.;В этот понедельник закончился трехдневный марафон под названием ICFPC.;elaboration_r
Условия можно прочитать здесь.;В этот раз – обход лабиринтов с разным доп. инвентарем.;elaboration_r
Это как бы отчет, но на самом деле памятка самому себе на случай,;Условия можно прочитать здесь.;elaboration_r
если буду играть еще через год.;Это как бы отчет, но на самом деле памятка самому себе на случай,;condition_r
Мне очень понравилось.;То есть я конечно устал как собака,;evaluation_r
но есть что-то приятное в том что этот опыт а) имеет конечную продолжительность,;То есть я конечно устал как собака,;contrast_m
а не тянется годами, как основная работа.;но есть что-то приятное в том что этот опыт а) имеет конечную продолжительность,;contrast_m
И б) можно полностью отдаться задаче,;но есть что-то приятное в том что этот опыт а) имеет конечную продолжительность,;joint_m
не думая о том зачем это все;И б) можно полностью отдаться задаче,;condition_r
и что ты делаешь со своей жизнью.;не думая о том зачем это все;joint_m
Такой вот повод упоенно фигачить на полной скорости какое-то время,;То есть я конечно устал как собака,;elaboration_r
чтобы ветер свистел в ушах.;Такой вот повод упоенно фигачить на полной скорости какое-то время,;evaluation_r
Ну и просто весело.;Такой вот повод упоенно фигачить на полной скорости какое-то время,;joint_m
Очень любопытно посмотреть, чего ты стоишь.;В голове-то ты мог много себе про себя нафантазировать,;preparation_r
а тут вот объективная реальность, ладдер,;и ты либо можешь компьютер заставить делать что ты хочешь,;condition_r
и ты либо можешь компьютер заставить делать что ты хочешь,;В голове-то ты мог много себе про себя нафантазировать,;contrast_m
либо не можешь.;и ты либо можешь компьютер заставить делать что ты хочешь,;joint_m
Никаких «если бы», никаких «возможно, наверное, мне кажется».;и ты либо можешь компьютер заставить делать что ты хочешь,;elaboration_r
Мы довольно посредственно выступили;В голове-то ты мог много себе про себя нафантазировать,;evaluation_r
(на момент закрытия 29 место из 142 участвовавших, в лучший свой момент были на пятом).;Мы довольно посредственно выступили;evidence_r
Исторический скриншот. Дальше мы сильно сдали;(на момент закрытия 29 место из 142 участвовавших, в лучший свой момент были на пятом).;elaboration_r
Участвовали втроем, я в первый раз.;Втроем у нас довольно хорошо делились области ответственности,;preparation_r
Как я понял, средний размер команды ~5 человек,;Втроем у нас довольно хорошо делились области ответственности,;background_r
не редкость и восемь встретить.;Как я понял, средний размер команды ~5 человек,;joint_m
было бы больше;появился бы организационный оверхед (как мне кажется).;condition_r
появился бы организационный оверхед (как мне кажется).;Втроем у нас довольно хорошо делились области ответственности,;joint_m
Восемь человек я бы вообще офигел менеджить;Втроем у нас довольно хорошо делились области ответственности,;comparison_m
и вообще ничего бы не написал, наверное.;Восемь человек я бы вообще офигел менеджить;joint_m
С другой стороны, больше рук – можно попробовать больше подходов.;Восемь человек я бы вообще офигел менеджить;contrast_m
Можно вложиться в инфрастуктуру. Наверное.;С другой стороны, больше рук – можно попробовать больше подходов.;joint_m
чтобы решить ее до конца было в принципе невозможно.;Задача достаточно нетривиальная,;purpose_r
Но и не супер-сложная,;Задача достаточно нетривиальная,;contrast_m
чтобы как-то ее решить можно было бы даже иногда и руками (ну, самые простые примеры).;Но и не супер-сложная,;purpose_r
Как правило это значит перебор вариантов в каком-то NP-полном поле, соревнование эвристик.;Задача достаточно нетривиальная,;elaboration_r
Собери бонусы, закрась лабиринт;Как правило это значит перебор вариантов в каком-то NP-полном поле, соревнование эвристик.;elaboration_r
Clojure,;Можно сколько угодно рассуждать про «глобальные оптимизации против локальных»,;preparation_r
несмотря на все плюсы языка высокого уровня и быстрого iteration time,;по ощущениям подошла довольно плохо.;concession_r
по ощущениям подошла довольно плохо.;Clojure,;same-unit_m
Потому что все упирается в перформанс.;Clojure,;cause_r
ненавидеть байтоебство,;Можно сколько угодно рассуждать про «глобальные оптимизации против локальных»,;joint_m
мыслить как стратег с высоты птичьего полета;Можно сколько угодно рассуждать про «глобальные оптимизации против локальных»,;joint_m
и гордиться тем, что не знаешь, как устроен компьютер,;Можно сколько угодно рассуждать про «глобальные оптимизации против локальных»,;joint_m
но это все и в императивных языках можно делать.;Можно сколько угодно рассуждать про «глобальные оптимизации против локальных»,;contrast_m
Они же не отнимают способности мыслить;но это все и в императивных языках можно делать.;cause_r
и планировать.;Они же не отнимают способности мыслить;joint_m
Да, механика записи мысли чуть более многословна,;ну зато оно того стоит.;concession_r
ну зато оно того стоит.;но это все и в императивных языках можно делать.;elaboration_r
Плюс за три дня вы разницы может и не заметите даже.;ну зато оно того стоит.;joint_m
А вот по перформансу заметите, еще как.;Можно сколько угодно рассуждать про «глобальные оптимизации против локальных»,;contrast_m
Как ни крути, а команда, которая обсчитает за условное время X в два раза больше вариантов, чем ее конкурент, будет в топе выше. КАК НИ КРУТИ.;А вот по перформансу заметите, еще как.;cause_r
Больше здесь строго лучше.;Как ни крути, а команда, которая обсчитает за условное время X в два раза больше вариантов, чем ее конкурент, будет в топе выше. КАК НИ КРУТИ.;elaboration_r
Либо больше итераций, больше вариантов попробовать,;Больше здесь строго лучше.;elaboration_r
либо решения будут более глубокими,;а значит и очков принесут больше.;cause_r
а значит и очков принесут больше.;Либо больше итераций, больше вариантов попробовать,;joint_m
ICFPC это как раз такой случай,;когда лучше чуть больше устать;condition_r
но получить программу которая будет нагружать процессор по делу,;когда лучше чуть больше устать;contrast_m
а не только мусор за юзером подбирать.;но получить программу которая будет нагружать процессор по делу,;contrast_m
К тому же, как ни странно, старые императивные языки может;когда лучше чуть больше устать;joint_m
и не очень легко позволяют до энтерпрайзных масштабов раздувать программы,;К тому же, как ни странно, старые императивные языки может;purpose_r
но что-что а бегать по массивам;К тому же, как ни странно, старые императивные языки может;contrast_m
и мутировать структуры они похлеще функциональных могут.;но что-что а бегать по массивам;joint_m
Ирония – соревнование приурочено к конференции по функциональному программированию,;когда лучше чуть больше устать;evaluation_r
а побеждают в нем все стабильнее C++ и императивщина.;Ирония – соревнование приурочено к конференции по функциональному программированию,;contrast_m
Выглядит красиво, жаль вся эта мощь обслуживает всякое говно вроде lazy sequences, primitive boxing, high-order functions вместо того, чтобы решать задачу;Ирония – соревнование приурочено к конференции по функциональному программированию,;elaboration_r
Сейчас я думаю,;когда лучше чуть больше устать;evaluation_r
что даже если бы мы выбрали просто Java с unboxed примитивами и примитивными массивами,;было бы качественно лучше.;condition_r
было бы качественно лучше.;Сейчас я думаю,;same-unit_m
C++/OCaml/Rust может быть дали бы еще 1,5-2 раза прирост,;Сейчас я думаю,;evidence_r
но это уже не изменило бы ситуацию качественно.;C++/OCaml/Rust может быть дали бы еще 1,5-2 раза прирост,;contrast_m
Но может и нет, цифры так, с потолка.;C++/OCaml/Rust может быть дали бы еще 1,5-2 раза прирост,;contrast_m
связанных с опечатками и лукапами не в тех структурах.;Про типизацию – да, было определенное количество багов,;cause_r
Конечно типы бы от этого спасли.;Про типизацию – да, было определенное количество багов,;elaboration_r
Но был и интересный момент,;когда под конец соревнования понадобилось кардинально поменять интерфейс решателя задач,;evaluation_r
когда под конец соревнования понадобилось кардинально поменять интерфейс решателя задач,;Про типизацию – да, было определенное количество багов,;contrast_m
и вот тут отсутствие типов;когда под конец соревнования понадобилось кардинально поменять интерфейс решателя задач,;elaboration_r
позволило мне зарефакторить решатель,;и вот тут отсутствие типов;purpose_r
оставив генератор (вторую большую часть программы) на старых структурах.;и вот тут отсутствие типов;condition_r
В статически типизированном языке мне пришлось бы рефакторить всю программу целиком,;что съело бы ценное время.;cause_r
что съело бы ценное время.;Про типизацию – да, было определенное количество багов,;comparison_m
Конечно, это просто забавный аргумент, курьез,;я его привожу тут;evaluation_r
я его привожу тут;Про типизацию – да, было определенное количество багов,;evaluation_r
только потому, что все остальные традиционные скучные примеры традиционно указывают в обратную сторону.;я его привожу тут;cause_r
чем мешали —;Да, я думаю именно в этой ситуации—сверхинтенсивной коллаборации над одним маленьким сверхчасто редактируемым куском кода—типы бы больше помогли,;contrast_m
их нужно немного,;Да, я думаю именно в этой ситуации—сверхинтенсивной коллаборации над одним маленьким сверхчасто редактируемым куском кода—типы бы больше помогли,;cause_r
по сути это структуры даже просто, которые спасли бы от глупых опечаток.;их нужно немного,;joint_m
В более спокойной обстановке, без цейтнота, оба примера, и опечатки, и рефакторинг, не имели бы такого веса,;Да, я думаю именно в этой ситуации—сверхинтенсивной коллаборации над одним маленьким сверхчасто редактируемым куском кода—типы бы больше помогли,;comparison_m
когда есть и тесты, и время сделать все нормально.;В более спокойной обстановке, без цейтнота, оба примера, и опечатки, и рефакторинг, не имели бы такого веса,;condition_r
Кстати, многие ошибки, которые все-таки у нас были,;Да, я думаю именно в этой ситуации—сверхинтенсивной коллаборации над одним маленьким сверхчасто редактируемым куском кода—типы бы больше помогли,;background_r
были связаны с подстановкой переменной того же типа, где никакая система типов бы никого не спасла.;Кстати, многие ошибки, которые все-таки у нас были,;cause_r
Ну оно и не удивительно,;Кстати, многие ошибки, которые все-таки у нас были,;evaluation_r
когда у тебя большая часть программы, процентов 90, гоняет инты направо и налево.;Ну оно и не удивительно,;cause_r
Это же алгоритмы.;когда у тебя большая часть программы, процентов 90, гоняет инты направо и налево.;cause_r
не с этого хакатона, но смысл такой же;Кстати, многие ошибки, которые все-таки у нас были,;elaboration_r
Очень важно оказалось докапываться до причин каждой странности.;Удивительно, на самом деле, насколько программа может как-то работать;preparation_r
и выдавать решения,;Удивительно, на самом деле, насколько программа может как-то работать;joint_m
имея локальные проблемы и ошибки в каких-то местах.;Удивительно, на самом деле, насколько программа может как-то работать;condition_r
Почти как нечто живое, выживающее.;Удивительно, на самом деле, насколько программа может как-то работать;comparison_m
Пару багов мы поймали просто глазами,;Удивительно, на самом деле, насколько программа может как-то работать;elaboration_r
когда увидели, что бот иногда на пару ходов ведет себя странно,;Пару багов мы поймали просто глазами,;condition_r
хотя и решает в итоге все задачи.;Пару багов мы поймали просто глазами,;concession_r
лабиринты, генерируемые нашим алгоритмом, имели хорошо узнаваемый вид;Пару багов мы поймали просто глазами,;elaboration_r
Очень важна базовая гигиена.;так ли это важно?;preparation_r
Ну там код неиспользуемый удалять,;Очень важна базовая гигиена.;elaboration_r
переменные нормально называть,;Ну там код неиспользуемый удалять,;joint_m
на функции разбивать нормально;Ну там код неиспользуемый удалять,;joint_m
где нужно,;на функции разбивать нормально;condition_r
не писать по два-три раза почти одно и то же,;Ну там код неиспользуемый удалять,;joint_m
если уже написано.;не писать по два-три раза почти одно и то же,;condition_r
Казалось бы, тоже — хакатон, вы через три дня все это выкините,;так ли это важно?;cause_r
так ли это важно?;Вот оказалось что да.;solutionhood_r
Потому что там где в обычном проекте косяки может через полгода-год всплывут,;Так что лучше пять минут потерять,;cause_r
здесь если ты что-то поленился,;коллега уже через полчаса об это споткнется.;condition_r
коллега уже через полчаса об это споткнется.;Потому что там где в обычном проекте косяки может через полгода-год всплывут,;contrast_m
Причем споткнется обязательно,;коллега уже через полчаса об это споткнется.;elaboration_r
потому что кода мало;Причем споткнется обязательно,;cause_r
и все используют всё постоянно.;потому что кода мало;joint_m
Так что лучше пять минут потерять,;Вот оказалось что да.;evidence_r
но поправить самому,;Так что лучше пять минут потерять,;contrast_m
пока контекст у тебя в голове,;но поправить самому,;condition_r
чем заставить коллег тебя материть;Так что лучше пять минут потерять,;contrast_m
и тебя же дергать.;чем заставить коллег тебя материть;joint_m
Чисто по времени выгоднее. Несмотря на.;Так что лучше пять минут потерять,;elaboration_r
Пилу нужно точить.;Мы очень страдали от отсутствия визуализатора.;preparation_r
Как бы ни казалось, что три дня уж без удобств можно прожить,;Пилу нужно точить.;elaboration_r
удобства все-таки решают.;Как бы ни казалось, что три дня уж без удобств можно прожить,;contrast_m
Организаторы предлагали готовый, но в браузере (на ScalaJS кстати),;Мы очень страдали от отсутствия визуализатора.;cause_r
и это не оч удобно было;Организаторы предлагали готовый, но в браузере (на ScalaJS кстати),;evaluation_r
(для каждого запуска нужно было накликать мышкой;и это не оч удобно было;cause_r
и выбрать два раза через диалог выбора файла два файла).;(для каждого запуска нужно было накликать мышкой;joint_m
Визуализатор организаторов;Организаторы предлагали готовый, но в браузере (на ScalaJS кстати),;elaboration_r
ух как же меня бесило выбирать эти файлы каждый раз!;Организаторы предлагали готовый, но в браузере (на ScalaJS кстати),;elaboration_r
Самое большое, чего там не хватало — пошагового реплея, перемотки назад и вперед,;Я написал в какой-то момент простой визуализатор через println и clear screen,;solutionhood_r
ну и доп информацию тоже иногда хочется какую-то вывести.;Самое большое, чего там не хватало — пошагового реплея, перемотки назад и вперед,;joint_m
Как разбился лабиринт,;ну и доп информацию тоже иногда хочется какую-то вывести.;elaboration_r
что думает бот, такое.;Как разбился лабиринт,;joint_m
он даже мультики показывал типа,;Я написал в какой-то момент простой визуализатор через println и clear screen,;elaboration_r
но хотелось бы чего-то более удобного и универсального.;Я написал в какой-то момент простой визуализатор через println и clear screen,;contrast_m
То же самое касается проверок на ошибки, на тупизну,;чтобы это был код независимый от основной codebase;preparation_r
на то что задача в принципе дорешивается.;То же самое касается проверок на ошибки, на тупизну,;elaboration_r
Причем желательно;чтобы это был код независимый от основной codebase;evaluation_r
— какое-то довольно продолжительное время мы отправляли задачи;чтобы это был код независимый от основной codebase;cause_r
и не знали, что часть из них тупо не принималась организаторами,;— какое-то довольно продолжительное время мы отправляли задачи;contrast_m
хотя мы думали, что все решили.;и не знали, что часть из них тупо не принималась организаторами,;concession_r
Тесты, конечно, писать некогда.;чтобы это был код независимый от основной codebase;joint_m
Но вот ассерты, ассерты помогают.;Тесты, конечно, писать некогда.;contrast_m
Иногда как раз такие странные косяки ловить,;Но вот ассерты, ассерты помогают.;elaboration_r
когда вроде и все еще работает,;и значит где-то что-то пошло не так, как ты думал.;cause_r
но какое-то ожидание нарушено,;когда вроде и все еще работает,;contrast_m
и значит где-то что-то пошло не так, как ты думал.;Иногда как раз такие странные косяки ловить,;condition_r
У ребят, например, из контура, была инфраструктура заготовлена: сервера, гоняющие задачи, сбор ответов, дашборд, сравнение.;Приходить надо было подготовленным.;elaboration_r
Мы этого, конечно, не знали,;Приходить надо было подготовленным.;contrast_m
у нас в лучшем случае запустил программу на ноуте;Мы этого, конечно, не знали,;elaboration_r
— в терминал вывалился результат.;у нас в лучшем случае запустил программу на ноуте;sequence_m
Пик инфраструктуры.;у нас в лучшем случае запустил программу на ноуте;elaboration_r
Очень пожалел,;что не сделали систему сбора и записи всех прогонов,;evaluation_r
чтобы из всего массива запусков периодически выбирался бы лучший вариант.;что не сделали систему сбора и записи всех прогонов,;purpose_r
Ведь если на какой-то специфичной версии алгоритма какая-то специфичная карта особенно удачно решилась,;нет причин не отправлять это решение,;condition_r
нет причин не отправлять это решение,;что не сделали систему сбора и записи всех прогонов,;cause_r
даже если алгоритм потом менялся десять раз.;нет причин не отправлять это решение,;condition_r
Ну и сравнивать эффективность решений наглядно было бы полезно;нет причин не отправлять это решение,;joint_m
(мы потом похожую штуку сделали,;Ну и сравнивать эффективность решений наглядно было бы полезно;elaboration_r
но решения надо было вручную в репозиторий коммитить, такое себе).;(мы потом похожую штуку сделали,;contrast_m
который бы следил, какие задачи где считаются,;Вторая безусловно полезная штука, которой нам не хватало — центр координации,;purpose_r
и раздавал работу.;который бы следил, какие задачи где считаются,;joint_m
Так можно было бы и решать быстрее;Вторая безусловно полезная штука, которой нам не хватало — центр координации,;elaboration_r
(запустил на всех ноутах,;Так можно было бы и решать быстрее;elaboration_r
и задачи считаются разные,;(запустил на всех ноутах,;joint_m
не пересекаются),;(запустил на всех ноутах,;joint_m
и гипотез разных потестировать,;Так можно было бы и решать быстрее;joint_m
и на дашборд красиво вывести.;Так можно было бы и решать быстрее;joint_m
Ведь известно заранее, что будет N задач,;инфраструктура под это довольно универсальная получается.;cause_r
у каждой есть вход и выход,;Ведь известно заранее, что будет N задач,;elaboration_r
инфраструктура под это довольно универсальная получается.;Так можно было бы и решать быстрее;cause_r
Как правильно распределять силы я пока не понял.;В результате весь второй день был как в тумане;preparation_r
Я выложился по максимуму в первый день (до 6 утра, на следующий встал в 11);В результате весь второй день был как в тумане;cause_r
чтобы как можно больше впихнуть в Lightning Round (первые 24 часа).;Я выложился по максимуму в первый день (до 6 утра, на следующий встал в 11);purpose_r
В результате весь второй день был как в тумане;Возможно, здоровый сон каждый день (ну ок, кроме последнего) суммарно дал бы больше эффективности за три дня, чем такое.;solutionhood_r
и работалось как на автопилоте.;В результате весь второй день был как в тумане;joint_m
В третий зашли нормально,;В результате весь второй день был как в тумане;sequence_m
я переписал алгоритм даже,;В третий зашли нормально,;elaboration_r
но тоже было очень тяжело.;я переписал алгоритм даже,;contrast_m
Перерыв на обед;Возможно, здоровый сон каждый день (ну ок, кроме последнего) суммарно дал бы больше эффективности за три дня, чем такое.;elaboration_r
В целом мне кажется, мы выступили неплохо для первого раза,;По ощущением наших сил едва хватило,;preparation_r
но в целом неудовлетворительно.;В целом мне кажется, мы выступили неплохо для первого раза,;contrast_m
чтобы выкатить самый простой жадный алгоритм с самым простым lookahead;По ощущением наших сил едва хватило,;purpose_r
и мы даже не преступили к стадии, когда тестировали бы разные гипотезы;По ощущением наших сил едва хватило,;contrast_m
и прочие умные идеи бы пробовали.;и мы даже не преступили к стадии, когда тестировали бы разные гипотезы;joint_m
То есть просто боролись со сложностью задачи.;и мы даже не преступили к стадии, когда тестировали бы разные гипотезы;restatement_m