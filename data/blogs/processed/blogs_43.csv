EDU_1;EDU_2;Relation
Моя статья — не полноценное описание продукта,;Попробую заполнить этот пробел,;solutionhood_r
а только небольшое уточнение хорошей публикации «FusionPBX, или снова-здорово, FreeSWITCH».;Моя статья — не полноценное описание продукта,;contrast_m
Мне кажется в ней не очень хорошо раскрыта тема ACL в FusionPBX.;а только небольшое уточнение хорошей публикации «FusionPBX, или снова-здорово, FreeSWITCH».;evaluation_r
исходя из собственного опыта работы с FreeSWITCH/FusionPBX.;Попробую заполнить этот пробел,;cause_r
И так, имеем установленный FusionPBX с зарегистрированным внутренним номером 1010 в домене domain.local и настроенным маршрутом;И здесь нужно совершенно четкое понимание, как работает ACL в FusionPBX, его особенности, логику и точку его привязки.;background_r
для внешних вызовов в город.;И так, имеем установленный FusionPBX с зарегистрированным внутренним номером 1010 в домене domain.local и настроенным маршрутом;purpose_r
ACL используем,;И так, имеем установленный FusionPBX с зарегистрированным внутренним номером 1010 в домене domain.local и настроенным маршрутом;joint_m
чтобы обезопасить нашу систему телефонии от несанкционированных вызовов, которые унесут наши денежки.;ACL используем,;purpose_r
Т.е. только из описанных в ACL сетей разрешить исходящие вызовы.;ACL используем,;restatement_m
Как и уважаемый автор вышеупомянутой статьи, я так же наступил на все грабли,;И здесь нужно совершенно четкое понимание, как работает ACL в FusionPBX, его особенности, логику и точку его привязки.;joint_m
связанные с ACL.;Как и уважаемый автор вышеупомянутой статьи, я так же наступил на все грабли,;cause_r
Начну с SipProfiles.;Оба профиля;preparation_r
(буду их так называть),;Оба профиля;elaboration_r
и internal, и external находятся в контексте Public,;Оба профиля;same-unit_m
и это не случайно.;Оба профиля;joint_m
Регистрация номеров происходит в профиле internal,;на него и обратим внимание.;cause_r
на него и обратим внимание.;Оба профиля;elaboration_r
В профиле internal привязан ACL-лист domains как apply-inbound-acl.;на него и обратим внимание.;elaboration_r
Именно эта строчка отвечает за работу ACL на уровне профиля.;В профиле internal привязан ACL-лист domains как apply-inbound-acl.;elaboration_r
Пока с профилями всё.;Оба профиля;evaluation_r
Context;Контекст, кроме всего прочего, используется в маршрутизации вызовов.;preparation_r
Все входящие маршруты привязаны к контексту Public.;Контекст, кроме всего прочего, используется в маршрутизации вызовов.;elaboration_r
Исходящие (в город, на сотовые, междугородка, международка, и любые другие) маршруты находятся (по умолчанию) в контексте имени домена;Все входящие маршруты привязаны к контексту Public.;elaboration_r
(назовем его domain.local).;Исходящие (в город, на сотовые, междугородка, международка, и любые другие) маршруты находятся (по умолчанию) в контексте имени домена;elaboration_r
ACL;Теперь давайте разберемся с ACL.;preparation_r
Теперь давайте разберемся с ACL.;В ACL-лист domains прописываем сеть (ну к примеру 192.168.0.0/24),;background_r
По умолчанию, в только что установленной FusionPBX есть два ACL-листа:;Теперь давайте разберемся с ACL.;elaboration_r
domains действие по умолчанию:;По умолчанию, в только что установленной FusionPBX есть два ACL-листа:;elaboration_r
deny — этот лист привязан к профилю internal;domains действие по умолчанию:;elaboration_r
lan действие по умолчанию: allow;deny — этот лист привязан к профилю internal;joint_m
делаем этой сети разрешение allow,;В ACL-лист domains прописываем сеть (ну к примеру 192.168.0.0/24),;sequence_m
применяем reloadacl.;В ACL-лист domains прописываем сеть (ну к примеру 192.168.0.0/24),;sequence_m
Далее регистрируем телефон из этой сети,;В ACL-лист domains прописываем сеть (ну к примеру 192.168.0.0/24),;sequence_m
и вроде бы все хорошо и по инструкции и логично.;Далее регистрируем телефон из этой сети,;evaluation_r
Начинаем тестировать,;В ACL-лист domains прописываем сеть (ну к примеру 192.168.0.0/24),;sequence_m
делаем вызов на внешний номер;Начинаем тестировать,;joint_m
и… получаем бублик, а точнее дырку от бублика.;В ACL-лист domains прописываем сеть (ну к примеру 192.168.0.0/24),;sequence_m
Неожиданно!;и… получаем бублик, а точнее дырку от бублика.;evaluation_r
Начинаем анализировать лог в консоли или через Log Viewer FusioPBX.;В ACL-лист domains прописываем сеть (ну к примеру 192.168.0.0/24),;sequence_m
Видим наш вызов:;Ответ на самом деле прост.;solutionhood_r
[код];Видим наш вызов:;elaboration_r
Видим сработавший ACL:;Видим наш вызов:;sequence_m
[код];Видим сработавший ACL:;elaboration_r
И далее:;Видим наш вызов:;sequence_m
[код];И далее:;elaboration_r
Нет маршрута!;Видим наш вызов:;contrast_m
Хотя маршрут у нас честно прописан.;Видим наш вызов:;concession_r
Ответ на самом деле прост.;Начинаем анализировать лог в консоли или через Log Viewer FusioPBX.;elaboration_r
Вызов пришел.;Ответ на самом деле прост.;elaboration_r
ACL его пропустил.;Вызов пришел.;sequence_m
А так как ACL привязан в профилю internal,;FreeSWITCH честно смотрит маршрутизацию в контексте public.;cause_r
а этот профиль находится в контексте public,;А так как ACL привязан в профилю internal,;joint_m
FreeSWITCH честно смотрит маршрутизацию в контексте public.;ACL его пропустил.;cause_r
Но в контексте public только входящая маршрутизация,;FreeSWITCH честно смотрит маршрутизацию в контексте public.;contrast_m
и система честно нам говорит, что нет там ни каких маршрутов в город.;Но в контексте public только входящая маршрутизация,;joint_m
1. Прикрутить этот ACL не к профилю, а к самому внутреннему номеру.;Из сложившейся ситуации есть как минимум два выхода.;elaboration_r
Это может быть и самый правильный способ решения,;1. Прикрутить этот ACL не к профилю, а к самому внутреннему номеру.;evaluation_r
т.к. ACL лучше привязывать как можно ближе к Extension;Это может быть и самый правильный способ решения,;cause_r
для более тонкой настройки.;т.к. ACL лучше привязывать как можно ближе к Extension;purpose_r
Т.е. можно прописать конкретный адрес/адрес сети телефона, с которого он сможет сделать исходящий вызов.;1. Прикрутить этот ACL не к профилю, а к самому внутреннему номеру.;restatement_m
Минус этого варианта в том, что в каждом Extension придется это делать.;1. Прикрутить этот ACL не к профилю, а к самому внутреннему номеру.;contrast_m
2. Поправить ACL так,;1. Прикрутить этот ACL не к профилю, а к самому внутреннему номеру.;joint_m
чтобы он корректно работал на уровне профиля.;2. Поправить ACL так,;purpose_r
Я выбрал именно этот вариант,;2. Поправить ACL так,;evaluation_r
ибо добавить один раз сеть в ACL мне показалось проще,;Я выбрал именно этот вариант,;cause_r
чем прописывать его в каждом Extension.;ибо добавить один раз сеть в ACL мне показалось проще,;comparison_m
Но это конкретно под мою задачу.;Я выбрал именно этот вариант,;contrast_m
Для других задач,;возможно, нужна другая логика принятия решения.;purpose_r
возможно, нужна другая логика принятия решения.;Но это конкретно под мою задачу.;evaluation_r
И так.;АЛЛО. Всё работает.;preparation_r
Поправим ACL domains следующим образом:;АЛЛО. Всё работает.;solutionhood_r
domains действие по умолчанию: allow;Поправим ACL domains следующим образом:;elaboration_r
В ACL-лист domains прописываем сеть:;Поправим ACL domains следующим образом:;sequence_m
deny 192.168.0.0/24;В ACL-лист domains прописываем сеть:;elaboration_r
Применяем, reloadacl.;Поправим ACL domains следующим образом:;sequence_m
Тестируем: набираем снова номер 98343379хххх;Поправим ACL domains следующим образом:;sequence_m
и… идёт КПВ…;Тестируем: набираем снова номер 98343379хххх;sequence_m
Смотрим, что происходило в FreeSWITCH:;АЛЛО. Всё работает.;comparison_m
начинается вызов:;Смотрим, что происходило в FreeSWITCH:;elaboration_r
[код];начинается вызов:;elaboration_r
ACL не пропустил:;начинается вызов:;sequence_m
[код];ACL не пропустил:;elaboration_r
и далее:;начинается вызов:;sequence_m
[код];и далее:;elaboration_r
Маршрутизация прошла,;Смотрим, что происходило в FreeSWITCH:;evaluation_r
и далее идет установление соединения, которое выходит за рамки темы.;Маршрутизация прошла,;sequence_m
Если мы поменяем адрес сети в ACL,;но получим картину из первого тестирования,;condition_r
но получим картину из первого тестирования,;Маршрутизация прошла,;elaboration_r
т.е. ACL вызов пропустит;но получим картину из первого тестирования,;restatement_m
и маршрутизация скажет NO_ROUTE_DESTINATION.;т.е. ACL вызов пропустит;joint_m