EDU_1;EDU_2;Relation
когда у кого-то начинает что-либо хорошо получаться,;то почти всегда найдутся «подражатели», которые попытаются повторить тот же самый успех, путем копирования видимых действий оригинала?;cause_r
то почти всегда найдутся «подражатели», которые попытаются повторить тот же самый успех, путем копирования видимых действий оригинала?;Замечали ли вы за собой, своими коллегами или друзьями одну интересную особенность:;elaboration_r
При этом обычно, это подражание ни к чему не приводит,;Замечали ли вы за собой, своими коллегами или друзьями одну интересную особенность:;joint_m
поскольку «подражатель» начинает копировать лишь несколько видимых аспектов,;При этом обычно, это подражание ни к чему не приводит,;cause_r
без понимания всех внутренних причин успеха.;поскольку «подражатель» начинает копировать лишь несколько видимых аспектов,;condition_r
Первые примеры такого подражания легко увидеть у детей или подростков.;Вспомните, как мы встречались мальчишками осенью;preparation_r
Вспомните, как мы встречались мальчишками осенью;Сразу же вокруг него соберется группа однокашников, страстно желающих узнать рецепт успеха.;cause_r
и кто-то начинал хвастаться своими бицепсами.;Вспомните, как мы встречались мальчишками осенью;joint_m
При этом самое смешное, наблюдать, как избирательно работает наш мозг,;Сразу же вокруг него соберется группа однокашников, страстно желающих узнать рецепт успеха.;joint_m
который воспринимает лишь то, что мы хотим услышать.;При этом самое смешное, наблюдать, как избирательно работает наш мозг,;elaboration_r
Так во фразе: я тренировался на турнике каждый день по 40 минут в течении трех месяцев, мы услышим лишь «тренировался на турнике»;и будем озадачены отсутствием результата через неделю,;cause_r
и будем озадачены отсутствием результата через неделю,;При этом самое смешное, наблюдать, как избирательно работает наш мозг,;evidence_r
подтянувшись за все это время 4 раза.;и будем озадачены отсутствием результата через неделю,;condition_r
А, турник – это не для меня!;и будем озадачены отсутствием результата через неделю,;sequence_m
У меня мышцы спины слабые;А, турник – это не для меня!;cause_r
(руки слишком длинные,;У меня мышцы спины слабые;joint_m
турник во дворе кривой,;У меня мышцы спины слабые;joint_m
нет подходящих перчаток и т.п.), услышим мы через неделю,;У меня мышцы спины слабые;joint_m
когда энтузиазм ребят начнет спадать.;У меня мышцы спины слабые;cause_r
Поскольку успех проекта – дело не простое,;то не удивительно, что индустрия и отдельные ее участники начинают подражать успешным командам.;cause_r
то не удивительно, что индустрия и отдельные ее участники начинают подражать успешным командам.;Однако с аналогичной ситуацией сталкиваются не только подростки, но и вполне себе зрелые люди, занимающиеся, например, разработкой ПО.;elaboration_r
Но и в этом случае следование чужим советам и слепое копирование чужих практик редко приводит;к успеху.;cause_r
к успеху.;то не удивительно, что индустрия и отдельные ее участники начинают подражать успешным командам.;contrast_m
Как и тот подросток, добившийся успеха на турнике, успешная команда разработчиков, приходят к применению новых подходов постепенно и сознательно,;к успеху.;comparison_m
понимая с какими проблемами они столкнулись;Как и тот подросток, добившийся успеха на турнике, успешная команда разработчиков, приходят к применению новых подходов постепенно и сознательно,;cause_r
и какие для этого есть подходящие решения.;понимая с какими проблемами они столкнулись;joint_m
если будет ложится на подготовленную почву – на соответствующий опыт.;Совет об использовании нового подхода или инструмента будет воспринят на порядок лучше,;condition_r
Прежде чем слепо браться за новый язык программирования;нужно понимать, чем не устраивает текущий.;condition_r
нужно понимать, чем не устраивает текущий.;Совет об использовании нового подхода или инструмента будет воспринят на порядок лучше,;elaboration_r
Нужно понимать, в чем заключается проблема;и только после этого, путем проб и ошибок стоит искать подходящее решение.;cause_r
и только после этого, путем проб и ошибок стоит искать подходящее решение.;нужно понимать, чем не устраивает текущий.;sequence_m
Чужой опыт невероятно полезен,;нужно понимать, чем не устраивает текущий.;contrast_m
но попытка перепрыгнуть через несколько ступенек эволюции;может привести к противоположным результатам.;cause_r
может привести к противоположным результатам.;Чужой опыт невероятно полезен,;contrast_m
Предположим, мы хотим начать использовать новые асинхронные возможности языка C# (async/await);Давайте рассмотрим следующий пример.;elaboration_r
или хотим поделиться своим успешным опытом использования этой штуки в своем проекте.;Предположим, мы хотим начать использовать новые асинхронные возможности языка C# (async/await);joint_m
С одной стороны, мы можем начать расписывать все радости этой async-ов и await-ов;и убедить команду в том, что это именно та возможность,;cause_r
и убедить команду в том, что это именно та возможность,;Давайте рассмотрим следующий пример.;elaboration_r
отсутствие которой не позволяло вовремя сдать ваши проекты.;и убедить команду в том, что это именно та возможность,;elaboration_r
Но можно подойти с другой стороны.;и убедить команду в том, что это именно та возможность,;contrast_m
Когда я рассказываю об асинхронном программировании,;я прежде всего говорю о преимуществах и недостатках синхронной и асинхронной модели программирования,;condition_r
а потом рассказываю об эволюции паттернов асинхронного программирования на платформе .NET:;я прежде всего говорю о преимуществах и недостатках синхронной и асинхронной модели программирования,;sequence_m
начиная от APM, через EAP, к TAP и потом уже к async/await.;а потом рассказываю об эволюции паттернов асинхронного программирования на платформе .NET:;elaboration_r
При этом я стараюсь убедить слушателей (или своих коллег), что async/await – это лишь вершина айсберга;я прежде всего говорю о преимуществах и недостатках синхронной и асинхронной модели программирования,;joint_m
и вам понадобиться понимание всех аспектов, на которых эти возможности построены (такие как Synchronization Context, TPL и многие.).;При этом я стараюсь убедить слушателей (или своих коллег), что async/await – это лишь вершина айсберга;joint_m
Попытка разобраться с подобным инструментом с наскока;приведет к тому, что появятся различные фобии и комплексы:;cause_r
async/await – это плохо,;приведет к тому, что появятся различные фобии и комплексы:;elaboration_r
поскольку из-за этого страдает производительность,;async/await – это плохо,;cause_r
async/await не стоит использовать,;async/await – это плохо,;joint_m
поскольку это усложняет обработку ошибок и т.п.;async/await не стоит использовать,;cause_r
Эти замечания вполне обоснованы,;приведет к тому, что появятся различные фобии и комплексы:;evaluation_r
но говорят они не столько о проблемах async-ов, сколько о недопонимании принципов этой возможности и истории ее возникновения.;Эти замечания вполне обоснованы,;contrast_m
Подход а давайте быстренько внедрим вот эту новую штуку приводит;к возникновению известного бага в поведении,;cause_r
известного нынче под именем культа карго,;к возникновению известного бага в поведении,;elaboration_r
автором которого является Ричард Фейнман;известного нынче под именем культа карго,;attribution_r
(который описывал его в контексте науки,;автором которого является Ричард Фейнман;elaboration_r
но он применим и к другим областям, таким как разработка ПО):;(который описывал его в контексте науки,;contrast_m
У народностей, населяющих регионы южных морей, бытует «культ карго».;В войну к ним прилетали самолеты с массой полезных вещей.;preparation_r
В войну к ним прилетали самолеты с массой полезных вещей.;к возникновению известного бага в поведении,;elaboration_r
Теперь люди хотят,;Поэтому они устраивают некое подобие взлетно-посадочной полосы,;cause_r
чтобы так было опять.;Теперь люди хотят,;purpose_r
Поэтому они устраивают некое подобие взлетно-посадочной полосы,;В войну к ним прилетали самолеты с массой полезных вещей.;sequence_m
вдоль нее разжигают костры,;Поэтому они устраивают некое подобие взлетно-посадочной полосы,;sequence_m
строят будку, в которой сидит человек, изображающий диспетчера (с деревяшками вместо наушников и бамбуковыми палочками-антеннами),;Поэтому они устраивают некое подобие взлетно-посадочной полосы,;sequence_m
и ждут приземления самолета.;Поэтому они устраивают некое подобие взлетно-посадочной полосы,;sequence_m
Они все делают как нужно.;В войну к ним прилетали самолеты с массой полезных вещей.;evaluation_r
По форме все правильно.;Они все делают как нужно.;elaboration_r
Все выглядит так, как было раньше.;По форме все правильно.;joint_m
Вот только самолеты не приземляются.;Они все делают как нужно.;contrast_m
Я называю такие вещи наукой «культа карго» (наукой самолетопоклонников):;В войну к ним прилетали самолеты с массой полезных вещей.;joint_m
соблюдаются все внешние признаки и рецепты научного исследования,;Я называю такие вещи наукой «культа карго» (наукой самолетопоклонников):;elaboration_r
но нет чего-то очень важного,;соблюдаются все внешние признаки и рецепты научного исследования,;contrast_m
потому что самолеты так и не приземляются.;но нет чего-то очень важного,;cause_r
Хорошей иллюстрацией карго культа является байка про пять обезьян,;к возникновению известного бага в поведении,;joint_m
которые в конечном итоге стали бояться достать бананы,;Хорошей иллюстрацией карго культа является байка про пять обезьян,;elaboration_r
хотя и никто из них уже и не знал, что будет плохого,;которые в конечном итоге стали бояться достать бананы,;concession_r
если они попытаются это сделать.;хотя и никто из них уже и не знал, что будет плохого,;condition_r
Недопонимание могут приводить;к появлению специальных стандартов кодирования;cause_r
(если речь идет о языках программирования и библиотеках);к появлению специальных стандартов кодирования;condition_r
или изменению процессов разработки таким образом,;к появлению специальных стандартов кодирования;same-unit_m
чтобы уберечься от несуществующих проблем;к появлению специальных стандартов кодирования;purpose_r
или использовать якобы наиболее передовые техники и методики.;чтобы уберечься от несуществующих проблем;joint_m
Так, можно встретить целые команды, в которых нельзя использовать цикл foreach в языке C#,;Как и с турником,;solutionhood_r
только потому, что некоторый авторитетный товарищ из этой команды 10 лет назад прочитал вумную статью,;Так, можно встретить целые команды, в которых нельзя использовать цикл foreach в языке C#,;cause_r
в которой говорилось, что пустой цикл foreach аж-но в 3 раза медленнее пустого цикла for.;только потому, что некоторый авторитетный товарищ из этой команды 10 лет назад прочитал вумную статью,;elaboration_r
Или можно встретить команды,;Так, можно встретить целые команды, в которых нельзя использовать цикл foreach в языке C#,;joint_m
в которых для каждого класса требуется написать интерфейс,;Или можно встретить команды,;elaboration_r
и обязательно использовать DI-контейнер якобы;в которых для каждого класса требуется написать интерфейс,;joint_m
для улучшения дизайна.;и обязательно использовать DI-контейнер якобы;purpose_r
При этом вся команда плюется,;Так, можно встретить целые команды, в которых нельзя использовать цикл foreach в языке C#,;joint_m
потому что разобраться в коде невозможно,;При этом вся команда плюется,;cause_r
написание юнит-теста занимает полдня,;потому что разобраться в коде невозможно,;joint_m
каждое изменение ломает два десятка этих самых тестов,;потому что разобраться в коде невозможно,;joint_m
а добавление даже самой маленькой возможности требует невероятных усилий.;потому что разобраться в коде невозможно,;joint_m
Часть команды чувствует, что здесь что-то не так,;При этом вся команда плюется,;evaluation_r
но боится выглядеть белой вороной на фоне остальных.;Часть команды чувствует, что здесь что-то не так,;contrast_m
Многие понимают, что идет подмена понятий;Часть команды чувствует, что здесь что-то не так,;joint_m
и IoC отождествляется с хорошим дизайном,;Многие понимают, что идет подмена понятий;joint_m
хотя на самом деле контейнер лишь инструмент, а не самоцель.;и IoC отождествляется с хорошим дизайном,;concession_r
чтобы добиться успеха в разработке ПО,;нам нужно не просто слепо перенимать чьи-то подходы,;purpose_r
нам нужно не просто слепо перенимать чьи-то подходы,;Как и с турником,;same-unit_m
а критически их анализировать.;нам нужно не просто слепо перенимать чьи-то подходы,;contrast_m
Это не значит, что не нужно использовать чужой опыт и признавать авторитеты,;Как и с турником,;elaboration_r
это лишь значит, что время от времени нужно пересматривать свои подходы;Это не значит, что не нужно использовать чужой опыт и признавать авторитеты,;contrast_m
и смотреть, не изменилось ли ваше к ним отношение за прошедшее время.;это лишь значит, что время от времени нужно пересматривать свои подходы;joint_m
З.Ы. Многие, скорее всего, слышали такое высказывание, что если вы смотрите на свой код годичной давности,;то это значит, что вы остановились в своем развитии.;condition_r
и не считаете его го#%$-кодом,;З.Ы. Многие, скорее всего, слышали такое высказывание, что если вы смотрите на свой код годичной давности,;joint_m
Я бы не был столь категоричным,;Поэтому я бы несколько изменил формулировку таким образом:;cause_r
поскольку кодирование пусть и важный, но не единственный аспект разработки ПО.;Я бы не был столь категоричным,;cause_r
Поэтому я бы несколько изменил формулировку таким образом:;то это значит, что вы остановились в своем развитии.;evaluation_r
если через год вы не изменили своего мнения хотя бы в одном из аспектов разработки ПО (кодирование, дизайн, архитектура, работа с пользователями, методологии разработки ПО и др),;значит вы остановились в своем развитии.;condition_r
значит вы остановились в своем развитии.;Поэтому я бы несколько изменил формулировку таким образом:;elaboration_r